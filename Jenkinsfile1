pipeline {
    agent any

    environment {
        // Define environment variables
        NEXUS_VERSION = 'nexus3'
        NEXUS_PROTOCOL = 'http'
        NEXUS_URL = '192.168.28.144:8081' // Nexus base URL
        NEXUS_REPOSITORY = 'DevopsClasse' // Nexus repository name
        CREDENTIALS_ID = 'nexus-cred'     // Jenkins credentials ID for Nexus
        MAVEN_HOME = tool name: 'M2_HOME' // Define Maven tool from Jenkins
    }

    stages {
        stage("Clone code from GitHub") {
            steps {
                // Clone the GitHub repository
                git branch: "main",
                    url: "https://github.com/Hamma-Mrabet/DevopsClass.git"
            }
        }

        stage("Maven Build") {
            steps {
                // Run Maven to package the project without running the tests
                sh "${MAVEN_HOME}/bin/mvn package -DskipTests=true"
            }
        }

        stage("Upload to Nexus") {
            steps {
                script {
                    // Artifact details
                    def artifactId = 'timesheet-devops' // Replace with your actual artifact ID
                    def version = '1.0'                 // Replace with your actual version
                    def packaging = 'jar'               // Adjust according to your artifact type

                    // Use Nexus Artifact Uploader plugin to upload the artifact
                    nexusArtifactUploader artifacts: [
                        [
                            artifactId: artifactId,
                            classifier: '',
                            file: "target/${artifactId}-${version}.${packaging}",
                            type: packaging
                        ]
                    ],
                    credentialsId: CREDENTIALS_ID,
                    groupId: 'tn.esprit.spring.services', // Replace with your actual group ID
                    nexusUrl: "${NEXUS_PROTOCOL}://${NEXUS_URL}/repository/${NEXUS_REPOSITORY}",
                    repository: NEXUS_REPOSITORY,
                    version: version,
                    nexusVersion: NEXUS_VERSION
                }
            }
        }
    }

    post {
        success {
            echo "Build and deployment to Nexus completed successfully!"
        }
        failure {
            echo "Build failed. Please check the logs."
        }
    }
}
