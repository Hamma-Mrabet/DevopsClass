pipeline {
    agent any

    environment {
        NEXUS_VERSION = 'nexus3'
        NEXUS_PROTOCOL = 'http'
        NEXUS_URL = '192.168.28.144:8081' // Nexus server base URL
        NEXUS_REPOSITORY = 'DevopsClasse'  // Nexus repository name
        CREDENTIALS_ID = 'nexus-cred'      // Jenkins credentials ID for Nexus
        GROUP_ID = 'tn.esprit.spring.services'  // Group ID for the artifact
    }

    tools {
        maven 'M2_HOME'  // Ensure Maven is configured in Jenkins with this name
    }

    stages {
        stage("Clone code from GitHub") {
            steps {
                git branch: "main",
                    url: "https://github.com/Hamma-Mrabet/DevopsClass.git"
            }
        }

        stage("Maven Build") {
            steps {
                sh "mvn package -DskipTests=true"
            }
        }

        stage("Upload to Nexus") {
            steps {
                script {
                    def artifactId = 'timesheet-devops'  // Define your artifact ID
                    def version = '1.0'                  // Define the version
                    def packaging = 'jar'                // Define the packaging type (e.g., jar)

                    // Correct usage of nexusArtifactUploader
                    nexusArtifactUploader(
                        nexusVersion: NEXUS_VERSION,
                        protocol: NEXUS_PROTOCOL,
                        nexusUrl: NEXUS_URL,
                        groupId: GROUP_ID,
                        artifactId: artifactId,
                        version: version,
                        repository: NEXUS_REPOSITORY,
                        credentialsId: CREDENTIALS_ID,
                        artifacts: [
                            [artifactId: artifactId,
                             classifier: '',
                             file: "target/${artifactId}-${version}.${packaging}",
                             type: packaging]
                        ]
                    )
                }
            }
        }
    }

    post {
        success {
            echo "Build and deployment to Nexus completed successfully!"
        }
        failure {
            echo "Build failed. Please check the logs."
        }
    }
}
